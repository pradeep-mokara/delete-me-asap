name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Generate .env from GitHub Secrets
        run: |
          cat <<EOF > .env
          POSTGRES_USER=${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB=${{ secrets.POSTGRES_DB }}
          POSTGRES_HOST=postgres
          POSTGRES_PORT=5432
          REDIS_HOST=redis
          MAX_RETRIES=${{ secrets.MAX_RETRIES }}
          DATABASE_URL=${{ secrets.DATABASE_URL }}
          REDIS_URL=${{ secrets.REDIS_URL }}
          QG_API_URL=${{ secrets.QG_API_URL }}
          TEST_TARGET=${{ secrets.TEST_TARGET }}
          EOF

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Start Docker stack
        run: |
          docker compose up -d --build
          echo "Done building"
          sleep 5

      - name: Submit all test scripts
        id: submit-jobs
        env:
          TEST_TARGET: ${{ secrets.TEST_TARGET }}
        run: |
          TEST_FILES=$(find backend/tests -type f -name '*.js')
          JOB_COUNT=0

          for FILE in $TEST_FILES; do
            echo "Submitting $FILE"
            docker compose exec -T job-server python -m backend.cli submit \
              --org-id ci-org \
              --app-version-id ci-v1 \
              --test-path $FILE \
              --target "$TEST_TARGET"
            JOB_COUNT=$((JOB_COUNT+1))
          done

          echo "submitted_jobs=$JOB_COUNT" >> $GITHUB_OUTPUT
          sleep 5

      - name: Check job status in DB
        run: |
          JOB_ID=$(docker compose exec -T postgres psql -U ${{ secrets.POSTGRES_USER }} -d ${{ secrets.POSTGRES_DB }} -t -c "SELECT id FROM jobs ORDER BY created_at DESC LIMIT 1;" | tr -d '[:space:]')
          STATUS=$(docker compose exec -T postgres psql -U ${{ secrets.POSTGRES_USER }} -d ${{ secrets.POSTGRES_DB }} -t -c "SELECT status FROM jobs WHERE id = '$JOB_ID';" | tr -d '[:space:]')
          echo "Job ID: $JOB_ID"
          echo "Job status: $STATUS"
          if [ "$STATUS" = "success" ] || [ "$STATUS" = "failed" ]; then
            echo "Job processed"
          else
            echo "Job not completed"
            exit 1
          fi

      - name: Clean up
        run: docker-compose down -v


name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Generate .env from GitHub Secrets
        run: |
          cat <<EOF > .env
          POSTGRES_USER=${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB=${{ secrets.POSTGRES_DB }}
          POSTGRES_HOST=postgres
          POSTGRES_PORT=5432
          REDIS_HOST=redis
          MAX_RETRIES=${{ secrets.MAX_RETRIES }}
          DATABASE_URL=${{ secrets.DATABASE_URL }}
          REDIS_URL=${{ secrets.REDIS_URL }}
          QG_API_URL=${{ secrets.QG_API_URL }}
          EOF

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Start Docker stack
        run: |
          docker compose up --build
          echo "Done building"
          sleep 5

      - name: Submit all test scripts
        id: submit-jobs
        run: |
          TEST_FILES=$(find backend/tests -type f -name '*.js')
          JOB_COUNT=0

          for FILE in $TEST_FILES; do
            echo "Submitting $FILE"
            docker-compose exec -T job-server python -m backend.cli submit \
              --org-id ci-org \
              --app-version-id ci-v1 \
              --test-path $FILE \
              --target ${{ secrets.TEST_TARGET }}
            JOB_COUNT=$((JOB_COUNT+1))
          done

          echo "submitted_jobs=$JOB_COUNT" >> $GITHUB_OUTPUT
          sleep 5

      - name: Check job statuses
        run: |
          JOB_COUNT=${{ steps.submit-jobs.outputs.submitted_jobs }}
          echo "Checking latest $JOB_COUNT job(s)..."
          JOBS=$(docker-compose exec -T job-server psql -U ${{ secrets.POSTGRES_USER }} -d ${{ secrets.POSTGRES_DB }} -t -c "SELECT id, status FROM jobs ORDER BY created_at DESC LIMIT $JOB_COUNT;")
          echo "$JOBS"

          FAILURES=$(echo "$JOBS" | grep -v 'success' | grep -v '^$' | wc -l)
          if [ "$FAILURES" -eq 0 ]; then
            echo "All jobs passed"
          else
            echo "$FAILURES job(s) failed"
            exit 1
          fi

      - name: Clean up
        run: docker-compose down -v

